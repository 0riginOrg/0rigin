import React, { Component } from 'react'
import { Redirect } from 'react-router-dom'
import { connect } from 'react-redux'

import { formInput, formFeedback } from '../../utils/formHelpers'
import { setSessionEmail } from '../../actions'
import agent from '../../utils/agent'

class Otp extends Component {
  state = {
    otpCode: '',
    otpCodeError: null,
    redirectToDashboard: false
  }

  handleVerifyOtpCode = async () => {
    let response
    try {
      const apiUrl = process.env.PORTAL_API_URL || 'http://localhost:5000'
      response = await agent
        .post(`${apiUrl}/api/verify_totp`)
        .send({ code: this.state.otpCode })
    } catch (error) {
      this.setState({ otpCodeError: 'Invalid OTP code.' })
      return
    }

    this.props.setSessionEmail(response.body.email)
    this.setState({ redirectToDashboard: true })
  }

  render() {
    if (this.state.redirectToDashboard) {
      return <Redirect to="/dashboard" />
    }

    const input = formInput(this.state, state => this.setState(state))
    const Feedback = formFeedback(this.state)

    return (
      <div className="action-card">
        <h1>2-Step Verification</h1>
        <p>Enter the code generated by your authenticator app</p>
        <div className="form-group">
          <label htmlFor="email">QR Code</label>
          <input {...input('otpCode')} />
          {Feedback('otpCode')}
        </div>
        <button
          className="btn btn-primary btn-lg"
          style={{ marginTop: '40px' }}
          onClick={this.handleVerifyOtpCode}
        >
          Continue
        </button>
      </div>
    )
  }
}

const mapStateToProps = state => {
  return {
    sessionEmail: state.sessionEmail
  }
}

const mapDispatchToProps = dispatch => {
  return {
    setSessionEmail: email => dispatch(setSessionEmail(email))
  }
}

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Otp)
