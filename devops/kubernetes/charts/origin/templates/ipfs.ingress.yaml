apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "ipfs.fullname" . }}
  labels:
    app: {{ template "ipfs.fullname" . }}
    app.kubernetes.io/name: origin
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: ipfs
  annotations:
    kubernetes.io/ingress.class: {{ .Release.Namespace }}-ingress
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: {{ .Values.clusterIssuer }}
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_clear_headers "Server: ";
      more_set_headers "Request-Id: $req_id";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1";
      more_set_headers "Strict-Transport-Security: max-age=31536000";
      more_set_headers "Expect-CT: max-age=86400";
      more_set_headers "Feature-Policy: microphone 'none'; geolocation 'none'";
      more_set_headers "Content-Security-Policy: default-src https:";
spec:
  tls:
    - secretName: {{ template "ipfs.host" . }}
      hosts:
        - {{ template "ipfs.host" . }}
    {{- if eq .Release.Namespace "prod" }}
    - secretName: gateway.originprotocol.com
      hosts:
        - gateway.originprotocol.com
    - secretName: ipfs.ogn.app
      hosts:
        - ipfs.ogn.app
    {{- end }}
  rules:
    - host: {{ template "ipfs.host" . }}
      http: &http_rules
        paths:
          - path: /
            backend:
              serviceName: {{ template "ipfs.fullname" . }}
              servicePort: 9999  # ipfs-proxy
          - path: /ipns
            backend:
              serviceName: {{ template "ipfs.fullname" . }}
              servicePort: 8080
    {{- if eq .Release.Namespace "prod" }}
    - host: gateway.originprotocol.com
      http: *http_rules
    - host: ipfs.ogn.app
      http:
        paths:
          - path: /api/v0/add
            backend: &api_service
              serviceName: {{ template "ipfs.fullname" . }}
              servicePort: 5001
          - path: /api/v0/object/links
            backend: *api_service
          - path: /api/v0/object/patch/add-link
            backend: *api_service
          - path: /api/v0/object/patch/rm-link
            backend: *api_service
          - path: /ipfs
            backend:
              serviceName: {{ template "ipfs.fullname" . }}
              servicePort: 8080
          - path: /ipns
            backend:
              serviceName: {{ template "ipfs.fullname" . }}
              servicePort: 8080
    {{- end }}
