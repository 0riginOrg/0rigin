apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "ipfs.fullname" . }}-restore"
  labels:
    app: {{ template "ipfs.fullname" . }}
    app.kubernetes.io/name: origin
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: ipfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "ipfs.fullname" . }}
  serviceName: "{{ template "ipfs.fullname" . }}-restore"
  template:
    metadata:
      labels:
        app: {{ template "ipfs.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
    spec:
      containers:
      - name: {{ template "ipfsProxy.fullname" . }}
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.ipfsProxyImage }}:{{ .Values.ipfsProxyImageTag }}"
        imagePullPolicy: Always
        ports:
          - containerPort: 9999
        env:
          - name: IPFS_API_URL
            value: "http://127.0.0.1:5001"
          - name: IPFS_GATEWAY_URL
            value: "http://127.0.0.1:8080"
      - name: {{ template "ipfs.fullname" . }}
        image: "{{ .Values.ipfsImage }}:v0.4.21"
        command: ["/usr/local/bin/start_ipfs", "daemon"]
        ports:
        - containerPort: 4001
          name: swarm
        - containerPort: 5001
          name: api
        - containerPort: 8080
          name: gateway
        volumeMounts:
          - mountPath: /data/ipfs
          {{- if eq .Release.Namespace "prod" }}
            name: {{ template "ipfs.fullname" . }}-data-ssd
          {{ else }}
            name: {{ template "ipfs.fullname" . }}-data
          {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ template "ipfs.fullname" . }}-data-ssd
    spec:
      storageClassName: ""
      volumeName: pv-ipfs-staging-restore-2020052801
      resources:
        requests:
          storage: 8Gi
