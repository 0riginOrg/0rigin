apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "dshopBackendRinkeby.fullname" . }}
  labels:
    app: {{ template "dshopBackendRinkeby.fullname" . }}
    app.kubernetes.io/name: dshop
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: dshop-backend-rinkeby
spec:
  replicas: {{ default 2 .Values.dshopBackendRinkebyReplicas }}
  selector:
    matchLabels:
      app: {{ template "dshopBackendRinkeby.fullname" . }}
  serviceName: {{ template "dshopBackendRinkeby.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "dshopBackendRinkeby.fullname" . }}
    spec:
      containers:
      - name: dshop-backend-rinkeby
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.dshopBackendRinkebyImage }}:{{ .Values.dshopBackendRinkebyImageTag }}"
        imagePullPolicy: Always
        env:
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "dshopBackendRinkeby.fullname" . }}
                key: ENCRYPTION_KEY
          - name: SESSION_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "dshopBackendRinkeby.fullname" . }}
                key: SESSION_SECRET
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: {{ template "dshopBackendRinkeby.fullname" . }}
                key: DATABASE_URL
          - name: REDIS_URL
            value: "redis://{{ template "dshopRedisRinkeby.fullname" . }}-0.{{ template "dshopRedisRinkeby.fullname" . }}.experimental.svc.cluster.local:6379/0"
          - name: DSHOP_CACHE
            value: /data/dshop-cache/rinkeby
          - name: LOG_LEVEL
            value: {{ default "INFO" .Values.dshopBackendRinkebyLogLevel }}
        volumeMounts:
        - name: "{{ template "dshopBackendRinkeby.fullname" . }}-shared-cache"
          mountPath: /data/dshop-cache
        port:
          - name: http
            containerPort: 3000
        resources:
          requests:
            memory: 1Gi
        startupProbe:
          httpGet:
            path: /health/started
            port: 3000
          failureThreshold: 10
          periodSeconds: 3
        livenessProbe:
          httpGet:
            path: /health/status
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances={{ .Values.dshopBackendRinkebyDBInstance }}=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: dshop-cloudsql-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      # Redis (depreciated)
      # - name: redis
      #   image: redis:6.0
      #   command: ["/bin/sh","-c"]
      #   args: ["mkdir -p /data/redis && redis-server --dir /data/redis "]
      #   volumeMounts:
      #     - mountPath: /data
      #       name: {{ template "dshopBackendRinkeby.fullname" . }}-redis
      volumes:
        - name: dshop-cloudsql-credentials
          secret:
            secretName: dshop-cloudsql-credentials
        - name: "{{ template "dshopBackendRinkeby.fullname" . }}-shared-cache"
          persistentVolumeClaim:
            claimName: "{{ template "dshopBackendStorage.fullname" . }}"
            readOnly: false

  #volumeClaimTemplates:

  # Redis storage (depreciated)
  # - metadata:
  #     name: {{ template "dshopBackendRinkeby.fullname" . }}-redis
  #     labels:
  #       app: {{ template "dshopBackendRinkeby.fullname" . }}
  #   spec:
  #     accessModes:
  #       - ReadWriteOnce  # Read-write for a single node only
  #     storageClassName: "standard"
  #     resources:
  #       requests:
  #         storage: {{ default "8Gi" .Values.dshopBackendStorageRequestSize }}

  # Regular PVC for dshop storage (old)
  # - metadata:
  #     name: "{{ template "dshopBackendRinkeby.fullname" . }}-dshop-cache"
  #     labels:
  #       app: {{ template "dshopBackendRinkeby.fullname" . }}
  #   spec:
  #     accessModes:
  #       - ReadWriteOnce  # Read-write for a single node only
  #     storageClassName: "standard"
  #     resources:
  #       requests:
  #         storage: {{ default "50Gi" .Values.dshopBackendStorageRequestSize }}

  # Shared GCP Filestore
  # - metadata:
  #     name: "{{ template "dshopBackendRinkeby.fullname" . }}-shared-cache"
  #     labels:
  #       app: {{ template "dshopBackendRinkeby.fullname" . }}
  #   spec:
  #     accessModes:
  #       - ReadWriteMany  # Read-write for many nodes
  #     storageClassName: ""
  #     volumeName: {{ template "dshopBackendStorage.fullname" . }}
  #     resources:
  #       requests:
  #         storage: {{ default "50Gi" .Values.dshopBackendRinkebyCacheSize }}
