apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "dshopBackendMainnet.fullname" . }}
  labels:
    app: {{ template "dshopBackendMainnet.fullname" . }}
    app.kubernetes.io/name: dshop
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: dshop-backend-mainnet
spec:
  replicas: {{ default 1 .Values.dshopBackendMainnetReplicas }}
  selector:
    matchLabels:
      app: {{ template "dshopBackendMainnet.fullname" . }}
  serviceName: {{ template "dshopBackendMainnet.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "dshopBackendMainnet.fullname" . }}
    spec:
      containers:
      - name: dshop-backend-mainnet
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.dshopBackendMainnetImage }}:{{ .Values.dshopBackendMainnetImageTag }}"
        imagePullPolicy: Always
        env:
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "dshopBackendMainnet.fullname" . }}
                key: ENCRYPTION_KEY
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: {{ template "dshopBackendMainnet.fullname" . }}
                key: DATABASE_URL
          - name: REDIS_URL
            value: redis://localhost:6379/0
          - name: DSHOP_CACHE
            value: /data/dshop
        volumeMounts:
        - name: "{{ template "dshopBackendMainnet.fullname" . }}-dshop-cache"
          mountPath: /data/dshop
        port:
          - name: http
            containerPort: 3000
        resources:
          requests:
            memory: 1Gi
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances={{ .Values.dshopBackendMainnetDBInstance }}=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: dshop-cloudsql-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      - name: redis
        image: redis:6.0
        command: ["/bin/sh","-c"]
        args: ["mkdir -p /data/redis && redis-server --dir /data/redis "]
        volumeMounts:
          - mountPath: /data
            name: {{ template "dshopBackendMainnet.fullname" . }}-redis
      volumes:
        - name: dshop-cloudsql-credentials
          secret:
            secretName: dshop-cloudsql-credentials
  volumeClaimTemplates:
  - metadata:
      name: {{ template "dshopBackendMainnet.fullname" . }}-redis
      labels:
        app: {{ template "dshopBackendMainnet.fullname" . }}
    spec:
      accessModes:
        - ReadWriteOnce  # Read-write for a single node only
      storageClassName: "standard"
      resources:
        requests:
          storage: {{ default "8Gi" .Values.dshopBackendStorageRequestSize }}
  - metadata:
      name: "{{ template "dshopBackendMainnet.fullname" . }}-dshop-cache"
      labels:
        app: {{ template "dshopBackendMainnet.fullname" . }}
    spec:
      accessModes:
        - ReadWriteOnce  # Read-write for a single node only
      storageClassName: "standard"
      resources:
        requests:
          storage: {{ default "50Gi" .Values.dshopBackendStorageRequestSize }}
