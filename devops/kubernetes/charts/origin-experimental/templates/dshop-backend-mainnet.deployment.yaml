apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dshopBackendMainnet.fullname" . }}
  labels:
    app: {{ template "dshopBackendMainnet.fullname" . }}
    app.kubernetes.io/name: dshop
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: dshop-backend-mainnet
spec:
  replicas: {{ default 1 .Values.dshopBackendMainnetReplicas }}
  selector:
    matchLabels:
      app: {{ template "dshopBackendMainnet.fullname" . }}
  serviceName: {{ template "dshopBackendMainnet.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "dshopBackendMainnet.fullname" . }}
    spec:
      containers:
      - name: dshop-backend-mainnet
        image: "{{ .Values.containerRegistry }}/{{ .Release.Namespace }}/{{ .Values.dshopBackendMainnetImage }}:{{ .Values.dshopBackendMainnetImageTag }}"
        imagePullPolicy: Always
        env:
          - name: ENCRYPTION_KEY
            valueFrom:
              secretKeyRef:
                name: {{ template "dshopBackendMainnet.fullname" . }}
                key: ENCRYPTION_KEY
          - name: DATABASE_URL
            valueFrom:
              secretKeyRef:
                name: {{ template "dshopBackendMainnet.fullname" . }}
                key: DATABASE_URL
        port:
          - name: http
            containerPort: 3000
        resources:
          requests:
            memory: 1Gi
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                  "-instances={{ .Values.dshopBackendMainnetDBInstance }}=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
        - name: dshop-cloudsql-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      volumes:
        - name: dshop-cloudsql-credentials
          secret:
            secretName: dshop-cloudsql-credentials
