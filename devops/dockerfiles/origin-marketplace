ARG NAMESPACE=dev

FROM node:10 as build

ARG GIT_COMMIT_HASH=dev
ARG GIT_BRANCH=dev
ARG ENVKEY

WORKDIR /app

ENV GIT_COMMIT_HASH=$GIT_COMMIT_HASH GIT_BRANCH=$GIT_BRANCH

# Install envkey-source
RUN curl -s -L -o envkey-source.tar.gz https://github.com/envkey/envkey-source/releases/download/v1.2.5/envkey-source_1.2.5_linux_amd64.tar.gz
RUN tar -zxf envkey-source.tar.gz 2> /dev/null
RUN rm envkey-source.tar.gz
RUN mv envkey-source /usr/local/bin

# Copy the necessary files for building dapp
COPY package*.json ./
COPY lerna.json ./
COPY ./packages/contracts ./packages/contracts
COPY ./packages/eventsource/ ./packages/eventsource
COPY ./packages/graphql/ ./packages/graphql
COPY ./packages/ipfs/ ./packages/ipfs
COPY ./packages/linker-client/ ./packages/linker-client
COPY ./packages/messaging-client/ ./packages/messaging-client
COPY ./packages/services/ ./packages/services
COPY ./packages/validator ./packages/validator

COPY ./dapps/marketplace ./dapps/marketplace
COPY ./scripts ./scripts

RUN npm install --unsafe-perm

RUN eval $(envkey-source) && npm run build --prefix dapps/marketplace

# Conditional copy of config depending on NAMESPACE build arg using multi stage
# builds
FROM build as build-dev
RUN mv /app/dapp/public/origin.html /app/dapp/public/index.html
FROM build as build-staging
RUN mv /app/dapp/public/rinkeby.html /app/dapp/public/index.html
FROM build as build-prod
RUN mv /app/dapp/public/mainnet.html /app/dapp/public/index.html
FROM build-${NAMESPACE} AS build-complete

# Copy built static files to nginx for serving
FROM nginx:1.15.2-alpine
COPY --from=build-complete /app/dapp/public /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
