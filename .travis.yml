---
defaults: &defaults
  language: node_js
  node_js: 10
  before_install:
    - curl -o- -L https://yarnpkg.com/install.sh | bash
    - export PATH="$HOME/.yarn/bin:$PATH"
  install: yarn install

db: &db
  addons:
    postgresql: 9.6
  services:
    - postgresql

git:
  depth: 1
matrix:
  include:
    # Run integration tests using docker compose
    # - name: "integration tests"
    #   language: minimal
    #   sudo: true
    #   before_script:
    #     # Setting required for Elasticsearch to run
    #     - sudo sysctl -w vm.max_map_count=262144
    #   script:
    #     - docker-compose build
    #    - docker-compose -f docker-compose.yml -f docker-compose.test.yml up --exit-code-from origin-tests

    - name: "javascript linting"
      <<: *defaults
      script: yarn lint

    - name: "@origin/marketplace integration tests"
      <<: *defaults
      script: yarn run test --prefix dapps/marketplace

    - name: "@origin/graphql unit tests"
      <<: *defaults
      script: yarn run test --prefix packages/graphql

    - name: "@origin/event-cache unit tests"
      <<: *defaults
      <<: *db
      env:
        - DATABASE_URL=postgres://postgres@localhost/travis_ci_test
      before_script:
        - psql -c 'create database travis_ci_test;' -U postgres
        - lerna run migrate --scope @origin/event-cache
      script: yarn run test --prefix packages/event-cache

    - name: "@origin/bridge unit tests"
      <<: *defaults
      <<: *db
      env:
        - DATABASE_URL=postgres://postgres@localhost/travis_ci_test
      before_script:
        - psql -c 'create database travis_ci_test;' -U postgres
        - lerna run migrate --scope @origin/bridge
      script: yarn run test --prefix infra/bridge

    - name: "@origin/contracts unit tests"
      <<: *defaults
      script: yarn run test --prefix packages/contracts

    - name: "@origin/discovery unit tests"
      <<: *defaults
      <<: *db
      env:
        - DATABASE_URL=postgres://postgres@localhost/travis_ci_test
        - AFFILIATE_ACCOUNT=0x821aea9a577a9b44299b9c15c88cf3087f3b5544
        - ARBITRATOR_ACCOUNT=0x0d1d4e623d10f9fba5db95830f7d3839406c6af2
        - ATTESTATION_ACCOUNT=0x99C03fBb0C995ff1160133A8bd210D0E77bCD101
      before_script:
        - psql -c 'create database travis_ci_test;' -U postgres
        - lerna run migrate --scope @origin/bridge
        - lerna run migrate --scope @origin/discovery
        - lerna run migrate --scope @origin/growth
        - lerna run migrate --scope @origin/identity
      script: yarn run test --prefix infra/discovery

    - name: "@origin/growth unit tests"
      <<: *defaults
      <<: *db
      env:
        - DATABASE_URL=postgres://postgres@localhost/travis_ci_test
      before_script:
        - psql -c 'create database travis_ci_test;' -U postgres
        - lerna run migrate --scope @origin/growth
        - lerna run migrate --scope @origin/identity
      install: yarn install
      script: yarn run test --prefix infra/growth

    - name: "@origin/notifications unit tests"
      <<: *defaults
      <<: *db
      env:
        - DATABASE_URL=postgres://postgres@localhost/travis_ci_test
      before_script:
        - psql -c 'create database travis_ci_test;' -U postgres
        - lerna run migrate --scope @origin/notifications
      install: yarn install
      script: yarn run test --prefix infra/notifications
    # - name: "@origin/token-transfer-* unit tests"
    #  language: node_js
    #  node_js: 10
    #  install:
    #    - yarn install --ignore-scripts
    #    - yarn run bootstrap -- --scope @origin/contracts --scope @origin/token --scope @origin/token-transfer-client --scope @origin/token-transfer-server
    #  script:
    #    - yarn run test --prefix infra/token-transfer-server
    #    - yarn run test --prefix infra/token-transfer-client
