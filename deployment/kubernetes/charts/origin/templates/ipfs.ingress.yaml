apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ template "ipfs.fullname" . }}
  labels:
    app: {{ template "ipfs.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    kubernetes.io/ingress.class: {{ .Release.Namespace }}-ingress
    kubernetes.io/tls-acme: "true"
    certmanager.k8s.io/cluster-issuer: {{ .Values.clusterIssuer }}
    nginx.ingress.kubernetes.io/proxy-body-size: "2m"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, PUT, POST"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
spec:
  tls:
    - secretName: {{ template "ipfs.host" . }}
      hosts:
        - {{ template "ipfs.host" . }}
    {{- if eq .Release.Namespace "prod" }}
    # Additional domain that was originally used for the IPFS gateway
    - secretName: gateway.originprotocol.com
      hosts:
        - gateway.originprotocol.com
    {{- end }}
  rules:
    - host: {{ template "ipfs.host" . }}
      http: &http_rules
        paths:
          # Only allow the add API call through to the IPFS API
          - path: /api/v0/add
            backend:
              serviceName: {{ template "ipfs.fullname" . }}
              servicePort: 5001
          # IFPS read only gateway
          - path: /
            backend:
              serviceName: {{ template "ipfs.fullname" . }}
              servicePort: 8080
    {{- if eq .Release.Namespace "prod" }}
    - host: gateway.originprotocol.com
      http: *http_rules
    {{- end }}
